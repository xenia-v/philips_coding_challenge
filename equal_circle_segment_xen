#!/bin/python3

import math
import os
import random
import re
import sys


#
# Complete the 'largestSegment' function below.
#
# The function is expected to return a STRING.
# The function accepts following parameters:
#  1. INTEGER_ARRAY radius
#  2. INTEGER segments
#

def largestSegment(radius, segments):
    # Write your code here
    pi = 3.14159265359

    #Sort radius
    radius.sort()

    #Calculate areas
    areas = []
    for i in radius:
        area = pi * i ** 2
        areas.append(area)

    #Start binary search
    area_min = 0
    area_max = max(areas)

    while round(area_min, 4) < round(area_max, 4):
        print (area_min)
        print (area_max)
        new_node = (area_min + area_max) / 2
        print (new_node)

        #Check if new_node fits area
        counter = 0
        for i in areas:
            counter += i // new_node
            if counter >= segments:
                area_min = new_node
        if area_min != new_node:  
            area_max = new_node

    return str(round(new_node, 4))

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    radius_count = int(input().strip())

    radius = []

    for _ in range(radius_count):
        radius_item = int(input().strip())
        radius.append(radius_item)

    segments = int(input().strip())

    result = largestSegment(radius, segments)

    fptr.write(result + '\n')

    fptr.close()
